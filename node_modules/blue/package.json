{
  "_args": [
    [
      {
        "raw": "blue",
        "scope": null,
        "escapedName": "blue",
        "name": "blue",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/wangfuyu/work/doclever/Client/command/doc-mock"
    ]
  ],
  "_from": "blue@latest",
  "_id": "blue@1.1.1",
  "_inCache": true,
  "_location": "/blue",
  "_npmUser": {
    "name": "floby",
    "email": "florent.jaby@gmail.com"
  },
  "_npmVersion": "1.2.15",
  "_phantomChildren": {},
  "_requested": {
    "raw": "blue",
    "scope": null,
    "escapedName": "blue",
    "name": "blue",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/blue/-/blue-1.1.1.tgz",
  "_shasum": "062b05d4921b20e9905eb9f02f4096091b493252",
  "_shrinkwrap": null,
  "_spec": "blue",
  "_where": "/Users/wangfuyu/work/doclever/Client/command/doc-mock",
  "author": {
    "name": "Florent Jaby",
    "email": "florent.jaby@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Floby/node-blue/issues"
  },
  "dependencies": {
    "stream-stream": "~1.1.0"
  },
  "description": "Streaming template engine",
  "devDependencies": {
    "nodeunit": "0.7",
    "stream-sink": "1.x.x"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "062b05d4921b20e9905eb9f02f4096091b493252",
    "tarball": "https://registry.npmjs.org/blue/-/blue-1.1.1.tgz"
  },
  "homepage": "https://github.com/Floby/node-blue#readme",
  "keywords": [
    "Stream",
    "Streaming",
    "template",
    "engine",
    "ejs"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "floby",
      "email": "florent.jaby@gmail.com"
    }
  ],
  "name": "blue",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/Floby/node-blue.png?branch=master)](http://travis-ci.org/Floby/node-blue)\n\n> Blue is a simple JSP-like, streamed template engine for [NodeJS](http://github.com/ry/node).\n\n## Setup\n\n### Git\n\n\tgit clone http://github.com/Floby/node-blue.git\n\n### Npm\n[npm](http://github.com/isaacs/npm) is a package manager for node\n\n\tnpm install blue\n\n## Using\n\n### Plus\n\nThe major interest of Blue resides in its streamed nature. When working with templates, you\nare very likely to include templates from templates which were included from other templates.\nThe Blue engine doesn't wait for an included file to be read, compiled and processed. It just\nbuffers the results of the current template until it can be sent.\n\n### Example\n\nblue exports a `Template` class which you'll need to instanciate\n\n\tvar Template = require('blue').Template;\n\tvar template = new Template('mytemplate.tpl', {dummy:'dummy'})\n\ttemplate.on('data', function(data) {\n\t  sys.print(data);\n\t})\n\ttemplate.run();\n\nthe Template class follow more or less the Readable Stream interface (I plan on fully implementing it very soon).\n\n### Methods\n* `data([object])` : Getter/Setter on the data that will be passed to the template\n* `sandbox(object)` : Sets the template to be sandboxed when run. See `Script`\n* `sandbox(false)` : Unsets the sandbox behavior if set previously\n* `run()` : Runs the template\n\n### Events\n* `'data' : function(data)`  emitted when a new chunk of data is available\n* `'end' : function()` emitted when the template has been fully processed\n* `'error' : function(err)` emitter when some kind of error happens, most likely to be an exception that has been caught\n\n### Template syntax\n\nThe template syntax is inspired by JSP. you can include javascript code in the middle of your\nfile if you put `<%` and `%>` around. by default the `print()` and `include()` function are available\nfrom the template. Others may be available depending on the sandboxing behaviour. `print(data)` will\nwrite `data` out and `include('filename')` will process `filename` as a template and insert the\nresult where the call was made. `filename` can be a relative or absolute path.\n\n* `<%= {expression} %>` is a shortcut for print({expression}).\n* `<%@ 'filename' %>` is a shortcut for include(filename). Note that if it is constant, quotes\nmust be used.\n\n\n```jsp\n<html>\n  <head>\n    <title> <%= data.title /* accessing passed in data */ %> </title>\n  </head>\n  <body>\n    <ul>\n      <% for(var i = 0 ; i<5 ; ++i) { %>\n          <li> <%= i %> </li>\n      <% } %>\n    </ul>\n    <%@ 'paragraph.tpl' %>\n  </body>\n</html>\n```\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Floby/node-blue.git"
  },
  "scripts": {
    "test": "nodeunit test/test-*.js"
  },
  "version": "1.1.1"
}
